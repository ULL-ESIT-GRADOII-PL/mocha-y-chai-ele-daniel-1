{"version":3,"sources":["webpack:///main.js","webpack:///webpack/bootstrap c4a734482a532fcc7124","webpack:///./assets/js/medida.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","Medida","valor","tipo","this","parseFloat","match","input","measures","inputRegex","XRegExp","exec","medidas","convertir","Celsius","f","Fahrenheit","k","Kelvin","numero","value","destino","source","toLowerCase","target","name","checkTarget","check","toFixed","err"],"mappings":"CAAS,SAAUA,GCInB,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAE,OAGA,IAAAC,GAAAF,EAAAD,IACAE,WACAE,GAAAJ,EACAK,QAAA,EAUA,OANAP,GAAAE,GAAAM,KAAAH,EAAAD,QAAAC,IAAAD,QAAAH,GAGAI,EAAAE,QAAA,EAGAF,EAAAD,QAvBA,GAAAD,KAqCA,OATAF,GAAAQ,EAAAT,EAGAC,EAAAS,EAAAP,EAGAF,EAAAU,EAAA,GAGAV,EAAA,KDMM,SAASI,EAAQD,EAASH,GAE/BI,EAAOD,QAAUH,EAAoB,IAKhC,SAASI,EAAQD,IEnDvB,SAAAA,GACA,YAEA,SAAAQ,GAAAC,EAAAC,GACAC,KAAAF,MAAAG,WAAAH,GACAE,KAAAD,OAGAF,EAAAK,MAAA,SAAAC,GACA,GAAAC,GAAA,SAEAC,EAAAC,QACA,qPAGAF,EAAA,6EACAA,EAAA,iGAEA,KAEA,OAAAE,SAAAC,KAAAJ,EAAAE,IAGAR,EAAAW,WAEAX,EAAAY,UAAA,SAAAX,GACA,GAAAM,GAAAP,EAAAW,OAEAJ,GAAAT,EAAAe,QACAN,EAAAO,EAAAC,WACAR,EAAAS,EAAAC,MAEA,IAAAZ,GAAAL,EAAAK,MAAAJ,EAEA,KAAAI,EAkBA,wDAjBA,IAAAa,GAAAb,EAAAc,MACAjB,EAAAG,EAAAH,KACAkB,EAAAf,EAAAe,OACA,KACA,GAAAC,GAAA,IAAAd,EAAAL,EAAA,GAAAoB,gBAAAJ,GACAK,EAAA,KAAAhB,EAAAa,EAAA,GAAAE,eAAAE,KACAC,EAAA,IAAAlB,EAAAa,EAAA,GAAAE,gBAAA,EACA,KAAAD,EAAAK,MAAAxB,KAAAuB,EAAAC,MAAAN,GACA,qBAEA,OAAAC,GAAAE,KAAAI,QAAA,OAAAJ,EAEA,MAAAK,GACA,0CAAA1B,EAAA,YAAAkB,EAAA,MAOA5B,EAAAQ,UACCG","file":"main.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t(function(exports) {\n\t    \"use strict\";\n\t\n\t    function Medida(valor,tipo) {\n\t        this.valor = parseFloat(valor);\n\t        this.tipo  = tipo;\n\t    }\n\t\n\t    Medida.match = function (input) {\n\t            var measures = '[a-z]+';\n\t\n\t            var inputRegex = XRegExp(\n\t                '^(\\\\s*)                                                  # whitespaces \\n'\n\t                    + '(?<value>       [-+]?\\\\d+ (?:[\\\\.,]\\\\d*)?\\\\s*)     # captures the number   \\n'\n\t                    + '((e(?<exponent> [-+]?\\\\d+)\\\\s*)?)                  # captures the exponent \\n'\n\t                    + '(?<tipo>       ' + measures + ')                   # Capture kind of value \\n'\n\t                    + '((?:\\\\s+to)?\\\\s+ (?<destino>' + measures + '))?    # Get \"to\" syntax \\n'\n\t                    + '(\\\\s*)$                                            # whitespaces \\n'\n\t                , 'xi');\n\t\n\t            return XRegExp.exec(input, inputRegex);\n\t    };\n\t\n\t    Medida.medidas = {};\n\t\n\t    Medida.convertir = function(valor) {\n\t        var measures = Medida.medidas;\n\t\n\t        measures.c = Celsius;\n\t        measures.f = Fahrenheit;\n\t        measures.k = Kelvin;\n\t\n\t        var match = Medida.match(valor);\n\t\n\t        if (match) {\n\t            var numero = match.value,\n\t                tipo   =  match.tipo,\n\t                destino = match.destino;\n\t            try {\n\t                var source = new measures[tipo[0].toLowerCase()](numero);  // new Fahrenheit(32) //asumimos que la priemra letra es el tipo correcto\n\t                var target = \"to\"+measures[destino[0].toLowerCase()].name; // \"toCelsius\"\n\t                var checkTarget = new measures[destino[0].toLowerCase()](0);\n\t                if(!source.check(tipo) || !checkTarget.check(destino)) {\n\t                  throw \"Error de tipos\";\n\t                }\n\t                return source[target]().toFixed(2) + \" \"+target; // \"0 Celsius\"\n\t            }\n\t            catch(err) {\n\t                return 'Desconozco como convertir desde \"'+tipo+'\" hasta \"'+destino+'\"';\n\t            }\n\t        }\n\t        else\n\t            return \"Introduzca una temperatura valida: 330e-1 F to C\";\n\t    };\n\t\n\t    exports.Medida = Medida;\n\t})(this);\n\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** main.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap c4a734482a532fcc7124\n **/","(function(exports) {\n    \"use strict\";\n\n    function Medida(valor,tipo) {\n        this.valor = parseFloat(valor);\n        this.tipo  = tipo;\n    }\n\n    Medida.match = function (input) {\n            var measures = '[a-z]+';\n\n            var inputRegex = XRegExp(\n                '^(\\\\s*)                                                  # whitespaces \\n'\n                    + '(?<value>       [-+]?\\\\d+ (?:[\\\\.,]\\\\d*)?\\\\s*)     # captures the number   \\n'\n                    + '((e(?<exponent> [-+]?\\\\d+)\\\\s*)?)                  # captures the exponent \\n'\n                    + '(?<tipo>       ' + measures + ')                   # Capture kind of value \\n'\n                    + '((?:\\\\s+to)?\\\\s+ (?<destino>' + measures + '))?    # Get \"to\" syntax \\n'\n                    + '(\\\\s*)$                                            # whitespaces \\n'\n                , 'xi');\n\n            return XRegExp.exec(input, inputRegex);\n    };\n\n    Medida.medidas = {};\n\n    Medida.convertir = function(valor) {\n        var measures = Medida.medidas;\n\n        measures.c = Celsius;\n        measures.f = Fahrenheit;\n        measures.k = Kelvin;\n\n        var match = Medida.match(valor);\n\n        if (match) {\n            var numero = match.value,\n                tipo   =  match.tipo,\n                destino = match.destino;\n            try {\n                var source = new measures[tipo[0].toLowerCase()](numero);  // new Fahrenheit(32) //asumimos que la priemra letra es el tipo correcto\n                var target = \"to\"+measures[destino[0].toLowerCase()].name; // \"toCelsius\"\n                var checkTarget = new measures[destino[0].toLowerCase()](0);\n                if(!source.check(tipo) || !checkTarget.check(destino)) {\n                  throw \"Error de tipos\";\n                }\n                return source[target]().toFixed(2) + \" \"+target; // \"0 Celsius\"\n            }\n            catch(err) {\n                return 'Desconozco como convertir desde \"'+tipo+'\" hasta \"'+destino+'\"';\n            }\n        }\n        else\n            return \"Introduzca una temperatura valida: 330e-1 F to C\";\n    };\n\n    exports.Medida = Medida;\n})(this);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./assets/js/medida.js\n ** module id = 1\n ** module chunks = 0\n **/"],"sourceRoot":""}